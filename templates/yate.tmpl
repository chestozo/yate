stylesheet

    %{ Block }

// ----------------------------------------------------------------------------------------------------------------- //

template [ this.Args ]

    match %{ Selector } %{ Mode } (%{ Args }) %{ Body }

template

    match %{ Selector } %{ Mode } %{ Body }

template_mode [ this.Value ]

    %{ Value }

// ----------------------------------------------------------------------------------------------------------------- //

root

    /

// ----------------------------------------------------------------------------------------------------------------- //

function_ [ this.Args ]

    func %{ Name }(%{ Args }) %{ Body }

function_

    func %{ Name } %{ Body }

// ----------------------------------------------------------------------------------------------------------------- //

key

    key %{ Name } (%{ Nodes }, %{ Use }) %{ Body }

// ----------------------------------------------------------------------------------------------------------------- //

arglist_item [ this.Default ]

    %{ Typedef } %{ Name } = %{ Default }

arglist_item

    %{ Typedef } %{ Name }

// ----------------------------------------------------------------------------------------------------------------- //

var_

    %{ Name } = %{ Value }

// ----------------------------------------------------------------------------------------------------------------- //

body [ this.AsList ]

    [
        %{ Block }
    ]

body

    {
        %{ Block }
    }

// ----------------------------------------------------------------------------------------------------------------- //

block

    %{ Defs }

    %{ Templates }

    %{ Exprs }

// ----------------------------------------------------------------------------------------------------------------- //

if_ [ this.Else ]

    if %{ Condition } %{ Then } else %{ Else }

if_

    if %{ Condition } %{ Then }

// ----------------------------------------------------------------------------------------------------------------- //

for_

    for %{ Expr } %{ Body }

// ----------------------------------------------------------------------------------------------------------------- //

apply [ this.Args ]

    apply %{ Expr } %{ Mode } (%{ Args })

apply

    apply %{ Expr } %{ Mode }

// ----------------------------------------------------------------------------------------------------------------- //

attr

    @%{ Name } %{ Op } %{ Value }

// ----------------------------------------------------------------------------------------------------------------- //

inline_or
    %{ Left } || %{ Right }

inline_and
    %{ Left } && %{ Right }

inline_not
    !%{ Left }

inline_eq
    %{ Left } %{ Op } %{ Right }

inline_rel
    %{ Left } %{ Op } %{ Right }

inline_add
    %{ Left } %{ Op } %{ Right }

inline_mul
    %{ Left } %{ Op } %{ Right }

inline_unary
    -%{ Expr }

inline_union
    %{ Left } | %{ Right }

inline_complex
    ( %{ Expr } )

inline_function
    %{ Name }(%{ Args })

inline_number
    %{ Value }

inline_var
    %{ Name }

// ----------------------------------------------------------------------------------------------------------------- //

jpath
    %{ Steps }

jpath_dots
    %{ Dots }

jpath_nametest
    .%{ Name }%{ Predicates }

jpath_predicate
    [ %{ Expr } ]

jpath_filter
    %{ Expr }%{ JPath }

// ----------------------------------------------------------------------------------------------------------------- //

xml_empty
    <%{ Name }%{ Attrs }/>

xml_start
    <%{ Name }%{ Attrs }>

xml_end
    </%{ Name }>

xml_text
    %{ Text }

xml_attr
    \ %{ Name }=%{ Value }

// ----------------------------------------------------------------------------------------------------------------- //

inline_string
    "%{ Value }"

string_expr
    { %{ Expr } }

string_literal
    %{ Value }

// ----------------------------------------------------------------------------------------------------------------- //

scalar
    (
        %{ Block }
    )

pair
    %{ Key } : %{ Value }

array
    [
        %{ Block }
    ]

object
    {
        %{ Block }
    }


// vim: set filetype=javascript:

